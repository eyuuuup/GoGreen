package database;

import client.Action;
import server.AddAction;
import server.TokenResponse;
import server.User;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

/**
 * Database is a skeleton class that will be used later on to work with other classes.
 */
public class Database {

    /**
     * This method saves the object in the database.
     * @param action An object of the class Action
     * @return if the query succeeded.
     */
    public static boolean addAction(AddAction action){
        return true;
    }

    /**
     * This method queries the database to look if the user exists.
     * @param token A string that contains a token.
     * @return if the query succeeded.
     */
    public static boolean silentLoginCheck(String token){

        try {
            Connection con = DriverManager.getConnection();
            PreparedStatement state = con.prepareStatement("select * from user_data WHERE user_data.token = token ");
            ResultSet Rs = state.executeQuery();

            if(Rs.getFetchSize() == 0){
                return false;
            }else {
                while (Rs.next()) {

                    System.out.println(Rs.getString(1));
                }
                con.close();
                return true;
            }


        } catch (Exception ex) {
            System.out.println(ex.getMessage());
            return false;
        }

    }

    /**
     * This method stores the token in the database.
     * @param user An object that is generated by the server
     */
    public static void register(User user, String token){
        try {
            Connection con = DriverManager.getConnection();
            PreparedStatement state = con.prepareStatement("INSERT INTO user_data (token, username, hashpassword, mail)\n" +
                    "VALUES ('1', '', '', '');");
            ResultSet rs = state.executeQuery();
        } catch (Exception ex) {
            System.out.println(ex.getMessage());

        }
    }

    /**
     * This method checks if the user exists in the database
     * @param username A string with the username
     * @return if the users exists or not
     */
    public static boolean checkUsername(String username){

        try{
            Connection con=DriverManager.getConnection();
            PreparedStatement state =con.prepareStatement("select * from user_data where user_data.username =  username ");
            ResultSet Rs = state.executeQuery();
            if(Rs.getFetchSize()==0)
            {
                return false;
            }
            else
                return true;
        }
        catch(Exception e)
        {
            System.out.println(e.getMessage());
            return false;
        }
    }

    /**
     * This method checks if the username and password combination exists in the database
     * @param user A user Object
     * @return if the username and password match
     */
    public static TokenResponse checkLogin(User user){
        TokenResponse token = new TokenResponse("token", true);
        //If user exists in the database then return the token an true or else return null string and false in boolean
        return token;
    }


}
